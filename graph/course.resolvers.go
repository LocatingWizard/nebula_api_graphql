package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"
	"os"

	"github.com/LocatingWizard/nebula_api_graphql/graph/model"
	"go.mongodb.org/mongo-driver/bson"
)

// Sections is the resolver for the sections field.
func (r *courseResolver) Sections(ctx context.Context, obj *model.Course) ([]*model.Section, error) {
	coll := r.DB.Collection(os.Getenv("SECTIONS_COLL_NAME"))
	var out []*model.Section
	for _, oid := range obj.Sections {

		filter := bson.D{{"_id", oid}}
		var result *model.Section
		err := coll.FindOne(ctx, filter).Decode(&result)
		if err != nil {
			fmt.Println(err)
			return nil, err
		}

		out = append(out, result)
	}
	return out, nil
}

// Course returns CourseResolver implementation.
func (r *Resolver) Course() CourseResolver { return &courseResolver{r} }

type courseResolver struct{ *Resolver }
